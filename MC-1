// Parentheses around lambda expressions
function cube(x) {
    return x * x * x;
}

((x, y, z) => x + y + cube(z))(1, 2, 3);

(x, y, z) => x + y + cube(z)(1, 2, 3);

// Function Declaration vs Lambda Expression vs Const Declaration
// f(x,y) = x(1 + xy)^2 + y(1 − y) + (1 + xy)(1 − y)
// f(x, y) = xa^2 + yb + ab

function square(x) {
    return x * x;
}

function f(x, y) {
    function f_helper(a, b) {
        return x * square(a) + y * b + a * b;
    }
    return f_helper(1 + x * y, 1 - y);
}

f(3, 4);

function f_2(x, y) {
    return ( (a, b) => x * square(a) + y * b + a * b
           )(1 + x * y, 1 - y);
}

f_2(3, 4);

function f_3(x, y) {
    const a = 1 + x * y;
    const b = 1 - y;
    return x * square(a) + y * b + a * b;
}

f_3(3, 4);

function sample(x, y) {
    return x + square(y);
}